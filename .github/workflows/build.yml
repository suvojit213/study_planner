name: Android APK Build and Release

on:
  push:
    branches:
      - main # Trigger on push to the main branch

jobs:
  build_and_release:
    runs-on: ubuntu-latest
    permissions:
      contents: write # For checking out code
      

    steps:
    - name: Checkout repository
      uses: actions/checkout@v3

    - name: Set up Flutter
      uses: subosito/flutter-action@v2
      with:
        flutter-version: '3.x' # Use a specific Flutter version or 'stable'

    - name: Get Flutter dependencies
      run: flutter pub get

    - name: Generate launcher icons
      run: flutter pub run flutter_launcher_icons:main

    - name: Commit and push generated icons
      run: |
        git config --global user.name 'github-actions[bot]'
        git config --global user.email 'github-actions[bot]@users.noreply.github.com'
        git add .
        if git diff --staged --quiet; then
          echo "No changes to commit"
        else
          git commit -m "Generate app icons"
          git push
        fi

    - name: Decode Keystore
      run: echo "${{ secrets.KEYSTORE_BASE64 }}" | base64 -d > android/app/keystore.jks

    - name: Build Android APK
      env:
        KEY_ALIAS: ${{ secrets.KEY_ALIAS }}
        KEY_PASSWORD: ${{ secrets.KEY_PASSWORD }}
        STORE_FILE: "keystore.jks"
        STORE_PASSWORD: ${{ secrets.STORE_PASSWORD }}
      run: flutter build apk --release

    - name: List APK contents
      run: ls -l build/app/outputs/flutter-apk/

    - name: Create GitHub Release
      uses: softprops/action-gh-release@v1
      if: startsWith(github.ref, 'refs/heads/main') # Only create release on main branch pushes
      with:
        files: build/app/outputs/flutter-apk/app-release.apk
        name: Release ${{ github.run_number }}
        tag_name: v${{ github.run_number }}
        body: | # Release notes
          Automated release for build ${{ github.run_number }}
          
          This release includes the latest changes from the main branch.